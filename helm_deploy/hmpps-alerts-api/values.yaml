generic-service:
  nameOverride: hmpps-alerts-api
  productId: "DPS090" # productId for the product that this belongs too, i.e. DPS001, see README.md for details

  replicaCount: 2
  resources:
    requests:
      cpu: 128m
      memory: 1024Mi
    limits:
      cpu: 2048m
      memory: 1280Mi

  image:
    repository: ghcr.io/ministryofjustice/hmpps-alerts-api
    tag: app_version # override at deployment time
    port: 8080

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: hmpps-alerts-api-cert
    annotations:
      nginx.ingress.kubernetes.io/server-snippet: |
        server_tokens off;
        location /alerts/inactive {
          deny all;
          return 401;
        }
        location /queue-admin/retry-all-dlqs {
          deny all;
          return 401;
        }

  # Used to access resources like S3 buckets, SQS queues and SNS topics
  serviceAccountName: hmpps-alerts-api

  # Environment variables to load into the deployment
  env:
    SERVER_PORT: "8080"
    JDK_JAVA_OPTIONS: "-Xmx512m -XX:+UseG1GC"
    SPRING_PROFILES_ACTIVE: "logstash"
    APPLICATIONINSIGHTS_CONFIGURATION_FILE: applicationinsights.json
    DB_SSL_MODE: "verify-full"
    AWS_REGION: "eu-west-2"
    HMPPS_SQS_USE_WEB_TOKEN: "true"

    # Sentry specific env vars
    SENTRY_IGNORED_EXCEPTIONS_FOR_TYPE: "org.apache.catalina.connector.ClientAbortException,org.springframework.web.servlet.resource.NoResourceFoundException,org.springframework.web.context.request.async.AsyncRequestNotUsableException"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-alerts-api:
      SENTRY_DSN: SENTRY_DSN
      SENTRY_AUTH_TOKEN: SENTRY_AUTH_TOKEN
    hmpps-alerts-api-application-insights:
      APPLICATIONINSIGHTS_CONNECTION_STRING: "APPLICATIONINSIGHTS_CONNECTION_STRING"
    hmpps-alerts-api-client-creds:
      CLIENT_ID: "API_CLIENT_ID"
      CLIENT_SECRET: "API_CLIENT_SECRET"
    rds-postgresql-instance-output:
      DB_SERVER: "rds_instance_address"
      DB_NAME: "database_name"
      DB_USER: "database_username"
      DB_PASS: "database_password"
    hmpps-domain-events-topic:
      HMPPS_SQS_TOPICS_HMPPSEVENTTOPIC_ARN: "topic_arn"
    sqs-domain-events-secret:
      HMPPS_SQS_QUEUES_HMPPSDOMAINEVENTSQUEUE_QUEUE_NAME: "queue_name"
    sqs-domain-events-dlq-secret:
      HMPPS_SQS_QUEUES_HMPPSDOMAINEVENTSQUEUE_DLQ_NAME: "queue_name"

  allowlist:
    groups:
      - digital_staff_and_mojo
      - moj_cloud_platform

  retryDlqCronjob:
    enabled: true
    retryDlqSchedule: "0 * * * *"

generic-prometheus-alerts:
  targetApplication: hmpps-alerts-api
  ingressAlertsEnabled: true
  applicationAlertsEnabled: true

generic-data-analytics-extractor:
  serviceAccountName: hmpps-alerts-to-ap-s3
  databaseSecretName: rds-postgresql-instance-output
  destinationS3SecretName: analytical-platform-reporting-s3-bucket
  enabled: false

publish_inactive_events:
  schedule: "0 3 * * *"
