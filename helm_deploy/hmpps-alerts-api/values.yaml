generic-service:
  nameOverride: hmpps-alerts-api
  productId: "DPS090" # productId for the product that this belongs too, i.e. DPS001, see README.md for details

  replicaCount: 4

  image:
    repository: quay.io/hmpps/hmpps-alerts-api
    tag: app_version # override at deployment time
    port: 8080

  ingress:
    enabled: true
    host: app-hostname.local # override per environment
    tlsSecretName: hmpps-alerts-api-cert
    modsecurity_enabled: true
    modsecurity_snippet: |
      SecAuditEngine On
      # detect only to investigate any requests that would be blocked if active
      SecRuleEngine DetectionOnly
      # team here grants access to the OpenSearch logs
      SecDefaultAction "phase:2,pass,log,tag:github_team=hmpps-move-and-improve"
      # Default is only GET HEAD POST OPTIONS so need to include PUT etc.
      SecAction "id:900200,phase:1,nolog,pass,t:none,setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
      # Missing User Agent Header
      SecRuleRemoveById 920320
      # Request Missing an Accept Header
      SecRuleRemoveById 920300
      # Change default denial to be a 406 so that we can tell easily that it is modsecurity doing the blocking
      SecRuleUpdateActionById 949110 "t:none,deny,status:406,logdata:%{SERVER_NAME}"
      SecRuleUpdateActionById 959100 "t:none,deny,status:406,logdata:%{SERVER_NAME}"

  # Used to access resources like S3 buckets, SQS queues and SNS topics
  serviceAccountName: hmpps-alerts-api

  # Environment variables to load into the deployment
  env:
    JAVA_OPTS: "-Xmx512m"
    SERVER_PORT: "8080"
    SPRING_PROFILES_ACTIVE: "logstash"
    APPLICATIONINSIGHTS_CONNECTION_STRING: "InstrumentationKey=$(APPINSIGHTS_INSTRUMENTATIONKEY)"
    APPLICATIONINSIGHTS_CONFIGURATION_FILE: applicationinsights.json
    DB_SSL_MODE: "verify-full"
    AWS_REGION: "eu-west-2"
    HMPPS_SQS_USE_WEB_TOKEN: "true"

  # Pre-existing kubernetes secrets to load as environment variables in the deployment.
  # namespace_secrets:
  #   [name of kubernetes secret]:
  #     [name of environment variable as seen by app]: [key of kubernetes secret to load]

  namespace_secrets:
    hmpps-alerts-api:
      APPINSIGHTS_INSTRUMENTATIONKEY: "APPINSIGHTS_INSTRUMENTATIONKEY"
      MANAGE_USERS_CLIENT_ID: "MANAGE_USERS_CLIENT_ID"
      MANAGE_USERS_CLIENT_SECRET: "MANAGE_USERS_CLIENT_SECRET"
      PRISONER_SEARCH_CLIENT_ID: "PRISONER_SEARCH_CLIENT_ID"
      PRISONER_SEARCH_CLIENT_SECRET: "PRISONER_SEARCH_CLIENT_SECRET"
    rds-postgresql-instance-output:
      DB_SERVER: "rds_instance_address"
      DB_NAME: "database_name"
      DB_USER: "database_username"
      DB_PASS: "database_password"
    hmpps-domain-events-topic:
      HMPPS_SQS_TOPICS_HMPPSEVENTTOPIC_ARN: "topic_arn"

  allowlist:
    groups:
      - internal

generic-prometheus-alerts:
  targetApplication: hmpps-alerts-api
  ingressAlertsEnabled: true
  applicationAlertsEnabled: true
